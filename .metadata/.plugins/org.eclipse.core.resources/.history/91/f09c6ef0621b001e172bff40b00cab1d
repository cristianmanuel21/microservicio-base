package com.formacionbdi.springboot.app.gateway.security;

import org.springframework.http.HttpHeaders;
import org.springframework.web.server.ServerWebExchange;
import org.springframework.web.server.WebFilter;
import org.springframework.web.server.WebFilterChain;

import reactor.core.publisher.Mono;

public class JwtAuthenticationFilter implements WebFilter{
	
	@Autowired
	private ReactiveAuthenticationManager authenticationManager;

	@Override
	public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
		return Mono.justOrEmpty(exchange.getRequest().getHeaders().getFirst(HttpHeaders.AUTHORIZATION))
				.filter(authHeader-> authHeader.startsWith("Bearer "))
				.switchIfEmpty(chain.filter(exchange).then(Mono.empty()))//si es vacio, continua la cadena con un Mono vacio
				.map(token->token.replace("Bearer ", ""))
				.flatMap(token->authenticationManager.)
				;
	}

}
