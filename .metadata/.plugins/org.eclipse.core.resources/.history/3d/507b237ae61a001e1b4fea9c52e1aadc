package com.formacionbdi.springboot.app.gateway.security;

import javax.crypto.SecretKey;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.authentication.ReactiveAuthenticationManager;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.security.Keys;
import reactor.core.publisher.Mono;

@Component
public class AuthenticationManagerJWT implements ReactiveAuthenticationManager {
	
	@Value("${config.security.oauth.jwt.key}")
	private String llaveKey;

	@Override
	public Mono<Authentication> authenticate(Authentication authentication) {
		return Mono.just(authentication.getCredentials().toString())
				.map(token->{
					SecretKey key=Keys.hmacShaKeyFor(llaveKey.getBytes())
				})
		return null;
	}

}
